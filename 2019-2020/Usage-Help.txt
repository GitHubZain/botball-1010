[Documentation]

[Importing the package]
	import prototype as p
	^this assumes the files are in the same directory

[Create]
	Controls the Create

	Create a Create object:
		roomba = p.create(logger-object)
		pass no value to the constructor if you would 
		like to disable logging

[Legobot]
	Controls the Legobot

	Create a Legobot object:
		legobot = p.legobot(logger-object)
		pass no value to the constructor if you would 
		like to disable logging		


[Config Reader]
	Reads values from a file

	Create a config object:
		C = prototype.config("Path-to-the-config")

	Read a specified value from the config:
		C.get("category", "the-variables-name", "return-type")
	return-type can be f, i, s
	f: float
	i: integer
	s: string
	default is float


[Logger]
	Write helpful information to file allowing
	debuging after run.

	Create an logger object:
		L = prototype.logger("Log-Folders-absolute-path")

	Write a message with a timestamp:
		L.write("message")

	Write a message without a timestamp:
		L.writeNT("message")

	Writing a sensor value:
		L.sensor("Name-of-the-sensor", the-sensors-current-value)

	Write an error message to the file:
		L.fatalError(str(e))
		Example	
			try:
				x=0
				1/x
			except ZeroDivisionError as e:
				L.fatalError(str(e))

	Write a warning to the file
		L.warning("warning")
